{
    "jps": "https://raw.githubusercontent.com/jelastic-jps/mysql-cluster/master/addons/auto-clustering/auto-cluster.jps",
    "defaultState": false,
    "skipOnEnvInstall": true,
    "nodeGroupData": {
        "scalingMode": "STATELESS",
        "skipNodeEmails": true,
        "isResetServicePassword": "NODE",
        "isRedeploySupport": false
    },
    "compatibleAddons": ["mysql-auto-cluster"],
    "settings": {
        "data": {
            "scheme": "slave",
            "is_proxysql": true
        },
        "fields": [{
            "type": "list",
            "caption": "Scheme",
            "name": "scheme",
            "values": [{
                   "value": "master",
                   "caption": "Master-Master",
                   "tooltip": "<h3>Master-Master with Extra Slaves</h3>Pre-configured replication with two interconnected master databases. While horizontal scaling the cluster is extended with additional slave nodes. <img width='314' height='280' src='https://raw.githubusercontent.com/jelastic/icons/master/mariadb/tip-cluster-mm.svg?sanitize=true'>"
               }, {
                   "value": "slave",
                   "caption": "Master-Slave",
                   "tooltip": "<h3>Master-Slave with Extra Slaves</h3>Pre-configured replication with one master and one slave database. While horizontal scaling the cluster is extended with additional slaves. <img width='314' height='280' src='https://raw.githubusercontent.com/jelastic/icons/master/mariadb/tip-cluster-ms.svg?sanitize=true'>"
               }, {
                   "value": "galera",
                   "caption": "Galera",
                   "tooltip": "<h3>Galera Cluster</h3>All servers can accept updates even if being issued concurrently. <img width='314' height='280' src='https://raw.githubusercontent.com/jelastic/icons/master/mariadb/tip-cluster-gl.svg?sanitize=true'>"
               }
           ],
           "tipParams": {"dismissDelay":600000,"anchor":"l","hideOnOver":false,"showDelay":0,"text":"LT_Tip_Cluster_MariaDB_%(value)"}
        }, {
            "type": "toggle",
            "caption": "Add ProxySQL",
            "name": "is_proxysql"
        }]
    },
    "validation": {
        "scalingMode": "STATELESS",
        "rules": {
            "scheme": {
                "master": {
                    "minCount": 2,
                    "setGlobals": {
                        "recCloudlets": 8
                    }
                },
                "slave": {
                    "minCount": 2,
                     "setGlobals": {
                        "recCloudlets": 8
                    }
                },
                "galera": {
                    "minCount": 3,
                    "setGlobals": {
                        "recCloudlets": 16
                    }
                }
            },
        "is_proxysql": {
        "true": {
            "setGlobals": {
                "proxyCount": 2
            }
          }
        }  
      }
    },
    "recommended": {
        "cloudlets": "${globals.recCloudlets}"
    },
    "requires": [
        "proxysql"
    ],
    "extraNodes":[
   {
        "nodeGroup": "proxy",
        "nodeType": "proxysql",
        "cloudlets": 8,
        "displayName": "ProxySQL",
        "count": "${globals.proxyCount:0}",
        "validation": {
            "minCount": 2,
            "maxCount": 2
        }
    },
  {
    "nodeType": "docker",
    "nodeGroup": "docker",
    "count": 1,
    "restartDelay": 10,
    "diskLimit": "100M",
    "extip": true,
    "scalingMode": "NEW",
    "displayName": "Docker Memcached",
    "fixedCloudlets": 6,
    "flexibleCloudlets": 18,
    "image": "memcached",
    "mission": "docker",
    "cmd": "./test_command/run"
  },
  {
    "nodeType": "docker",
    "nodeGroup": "docker2",
    "count": 1,
    "diskLimit": "1T",
    "extipv6": true,
    "displayName": "Docker MySQL",
    "scalingMode": "NEW",
    "fixedCloudlets": 2,
    "flexibleCloudlets": 8,
    "image": "mysql",
    "mission": "docker",
    "startService": true 
  },
  {
    "nodeType": "docker",
    "nodeGroup": "docker3",
    "count": 1,
    "restartDelay": 50,
    "diskLimit": 30,
    "displayName": "Docker WP",
    "scalingMode": "CLONE",
    "fixedCloudlets": 10,
    "flexibleCloudlets": 32,
    "image": "wordpress",
    "mission": "docker",
     "links": [
      "db:DB",
      "memcached:MEMCACHED",
    "startService": true
    ]
  }
],
    "description": "Automatic clusterization of the databases using the chosen scheme with pre-configured replication and auto-discovery of the nodes."
}
